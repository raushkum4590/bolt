const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "text/plain",
  };
   
  const CodeGenerationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  
  

     export const chatSession = model.startChat({
      generationConfig,
      history: [
      ],
    });

    export const GenAiCode=model.startChat({

      generationConfig:CodeGenerationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "Generate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\n\nReturn the response in JSON format with the following schema:\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\n\nHereâ€™s the reformatted and improved version of your prompt:\n\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\n\nReturn the response in JSON format with the following schema:\n\njson\nCopy code\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\nfiles:{\n  \"/App.js\": {\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\n  }\n}\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\n  \n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\n  -Add Emoji icons whenever needed to give good user experinence\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\n- Use icons from lucide-react for logos.\n\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags."},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"projectTitle\": \"Dashboard App\",\n  \"explanation\": \"This project creates a simple dashboard application using React, Tailwind CSS, and lucide-react for icons. It demonstrates a basic layout with a sidebar, header, and main content area. The project is structured with components organized into separate folders for better maintainability.  It includes a summary section, task list, charts, and recent activity. The design is clean and responsive, utilizing Tailwind CSS's utility classes for styling, date-fns for formating date, and react-chartjs-2 for generating charts.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport Sidebar from './components/Sidebar/Sidebar';\\nimport Header from './components/Header/Header';\\nimport Dashboard from './components/Dashboard/Dashboard';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"flex h-screen bg-gray-100\\\">\\n      <Sidebar />\\n      <div className=\\\"flex-1 flex flex-col overflow-hidden\\\">\\n        <Header />\\n        <main className=\\\"flex-1 p-4 overflow-y-auto\\\">\\n          <Dashboard />\\n        </main>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default App;\"\n    },\n     \"/components/Sidebar/Sidebar.js\": {\n      \"code\": \"import React from 'react';\\nimport { Home, Users, Settings, Mail, Bell, Star, Upload, Download, Menu } from 'lucide-react';\\n\\nfunction Sidebar() {\\n  return (\\n    <aside className=\\\"w-64 bg-gray-800 text-white\\\">\\n      <div className=\\\"p-4 flex items-center space-x-2\\\">\\n         <Menu className=\\\"h-6 w-6 text-white\\\"/>\\n          <span className=\\\"text-xl font-bold\\\">Dashboard</span>\\n      </div>\\n      <nav className=\\\"mt-4\\\">\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n          <Home className=\\\"h-5 w-5 mr-2\\\" />\\n          Home\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n          <Users className=\\\"h-5 w-5 mr-2\\\" />\\n          Users\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n          <Mail className=\\\"h-5 w-5 mr-2\\\" />\\n          Messages\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n           <Bell className=\\\"h-5 w-5 mr-2\\\" />\\n          Notifications\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n          <Star className=\\\"h-5 w-5 mr-2\\\" />\\n          Favorites\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n         <Upload className=\\\"h-5 w-5 mr-2\\\" />\\n          Uploads\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700\\\">\\n         <Download className=\\\"h-5 w-5 mr-2\\\" />\\n           Downloads\\n        </a>\\n        <a href=\\\"#\\\" className=\\\"flex items-center p-3 hover:bg-gray-700 mt-auto\\\">\\n          <Settings className=\\\"h-5 w-5 mr-2\\\" />\\n          Settings\\n        </a>\\n      </nav>\\n    </aside>\\n  );\\n}\\n\\nexport default Sidebar;\"\n    },\n    \"/components/Header/Header.js\": {\n      \"code\": \"import React from 'react';\\nimport { User, Search } from 'lucide-react';\\n\\nfunction Header() {\\n  return (\\n    <header className=\\\"bg-white p-4 shadow-md flex items-center justify-between\\\">\\n      <div className=\\\"flex items-center\\\">\\n        <h1 className=\\\"text-xl font-semibold text-gray-800\\\">Dashboard</h1>\\n      </div>\\n     <div className=\\\"flex items-center space-x-4\\\">\\n          <div className=\\\"relative flex items-center border rounded-md border-gray-300\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Search...\\\" className=\\\"px-3 py-1 focus:outline-none rounded-l-md\\\"/>\\n             <Search className=\\\"h-5 w-5 absolute right-2\\\" />\\n          </div>\\n          <User className=\\\"h-6 w-6 text-gray-700\\\"/>\\n        </div>\\n    </header>\\n  );\\n}\\n\\nexport default Header;\"\n    },\n    \"/components/Dashboard/Dashboard.js\": {\n      \"code\": \"import React from 'react';\\nimport Summary from './Summary/Summary';\\nimport TaskList from './TaskList/TaskList';\\nimport ChartSection from './ChartSection/ChartSection';\\nimport RecentActivity from './RecentActivity/RecentActivity';\\n\\nfunction Dashboard() {\\n  return (\\n    <div className=\\\"grid grid-cols-1 md:grid-cols-3 gap-4\\\">\\n      <div className=\\\"md:col-span-2 flex flex-col gap-4\\\">\\n        <Summary />\\n        <TaskList />\\n      </div>\\n      <div className='flex flex-col gap-4'>\\n         <ChartSection/>\\n         <RecentActivity />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Dashboard;\"\n    },\n     \"/components/Dashboard/Summary/Summary.js\": {\n      \"code\": \"import React from 'react';\\nimport { Clock, Users, Check, X } from 'lucide-react';\\n\\nfunction Summary() {\\n  return (\\n    <div className=\\\"bg-white shadow rounded-md p-4 grid grid-cols-2 gap-4\\\">\\n        <div className=\\\"flex items-center space-x-2\\\">\\n             <div className='bg-blue-100 p-2 rounded-full'><Clock className=\\\"h-6 w-6 text-blue-500\\\"/></div>\\n             <div>\\n                  <p className='text-gray-500 text-sm'>Pending Tasks</p>\\n                  <p className='text-xl font-semibold'>25</p>\\n             </div>\\n        </div>\\n         <div className=\\\"flex items-center space-x-2\\\">\\n             <div className='bg-green-100 p-2 rounded-full'><Check className=\\\"h-6 w-6 text-green-500\\\"/></div>\\n             <div>\\n                  <p className='text-gray-500 text-sm'>Completed Tasks</p>\\n                  <p className='text-xl font-semibold'>125</p>\\n             </div>\\n        </div>\\n        <div className=\\\"flex items-center space-x-2\\\">\\n             <div className='bg-yellow-100 p-2 rounded-full'><Users className=\\\"h-6 w-6 text-yellow-500\\\"/></div>\\n             <div>\\n                  <p className='text-gray-500 text-sm'>Total Users</p>\\n                  <p className='text-xl font-semibold'>345</p>\\n             </div>\\n        </div>\\n        <div className=\\\"flex items-center space-x-2\\\">\\n             <div className='bg-red-100 p-2 rounded-full'><X className=\\\"h-6 w-6 text-red-500\\\"/></div>\\n             <div>\\n                  <p className='text-gray-500 text-sm'>Cancelled Tasks</p>\\n                  <p className='text-xl font-semibold'>10</p>\\n             </div>\\n        </div>\\n    </div>\\n  );\\n}\\n\\nexport default Summary;\"\n    },\n     \"/components/Dashboard/TaskList/TaskList.js\": {\n      \"code\": \"import React from 'react';\\nimport { Edit, Trash, Check } from 'lucide-react';\\n\\nconst tasks = [\\n  { id: 1, title: 'Design Landing Page', status: 'pending' },\\n  { id: 2, title: 'Develop User Authentication', status: 'completed' },\\n  { id: 3, title: 'Implement Payment Gateway', status: 'pending' },\\n  { id: 4, title: 'Write Unit Tests', status: 'completed' }\\n];\\n\\nfunction TaskList() {\\n  return (\\n    <div className=\\\"bg-white shadow rounded-md p-4\\\">\\n        <h2 className='text-lg font-semibold mb-4'>Task List</h2>\\n      <ul className=\\\"divide-y divide-gray-200\\\">\\n        {tasks.map(task => (\\n          <li key={task.id} className=\\\"flex items-center justify-between p-3\\\">\\n             <div className=\\\"flex items-center\\\">\\n                { task.status ==='completed' ? <Check className=\\\"h-5 w-5 mr-2 text-green-500\\\"/> : <div className='h-5 w-5 mr-2 border border-gray-300 rounded'></div>}\\n                <span className={task.status === 'completed' ? 'line-through text-gray-500':''}>{task.title}</span>\\n             </div>\\n            <div className=\\\"space-x-2\\\">\\n              <button className=\\\"text-blue-500 hover:text-blue-700\\\">\\n                <Edit className=\\\"h-4 w-4\\\" />\\n              </button>\\n              <button className=\\\"text-red-500 hover:text-red-700\\\">\\n                <Trash className=\\\"h-4 w-4\\\" />\\n              </button>\\n            </div>\\n          </li>\\n        ))}\\n      </ul>\\n    </div>\\n  );\\n}\\n\\nexport default TaskList;\"\n    },\n    \"/components/Dashboard/ChartSection/ChartSection.js\": {\n      \"code\": \"import React from 'react';\\nimport { Bar } from 'react-chartjs-2';\\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\\n\\nChartJS.register(\\n  CategoryScale,\\n  LinearScale,\\n  BarElement,\\n  Title,\\n  Tooltip,\\n  Legend\\n);\\n\\nconst options = {\\n  responsive: true,\\n  plugins: {\\n    legend: {\\n      position: 'top',\\n    },\\n    title: {\\n      display: true,\\n      text: 'Monthly Sales',\\n    },\\n  },\\n};\\n\\nconst labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];\\n\\nconst data = {\\n  labels,\\n  datasets: [\\n    {\\n      label: 'Sales',\\n      data: [200, 150, 300, 250, 400, 350, 420],\\n      backgroundColor: 'rgba(54, 162, 235, 0.5)',\\n    }\\n  ],\\n};\\n\\n\\nfunction ChartSection() {\\n  return (\\n      <div className='bg-white shadow rounded-md p-4'>\\n          <Bar options={options} data={data} />\\n      </div>\\n  );\\n}\\n\\nexport default ChartSection;\"\n    },\n    \"/components/Dashboard/RecentActivity/RecentActivity.js\": {\n      \"code\": \"import React from 'react';\\nimport { format, isToday } from 'date-fns';\\n\\nconst activities = [\\n  { id: 1, user: 'John Doe', action: 'uploaded a document', date: new Date() },\\n  { id: 2, user: 'Jane Smith', action: 'edited a task', date: new Date(new Date().setDate(new Date().getDate() - 1))},\\n  { id: 3, user: 'Peter Pan', action: 'created a project', date: new Date(new Date().setDate(new Date().getDate() - 2)) },\\n  { id: 4, user: 'Alice Wonderland', action: 'completed a task', date: new Date(new Date().setDate(new Date().getDate() - 3))},\\n  { id: 5, user: 'Bob Builder', action: 'deleted a user', date: new Date(new Date().setDate(new Date().getDate() - 4)) }\\n];\\n\\nfunction RecentActivity() {\\n  return (\\n    <div className=\\\"bg-white shadow rounded-md p-4\\\">\\n        <h2 className='text-lg font-semibold mb-4'>Recent Activity</h2>\\n      <ul className=\\\"divide-y divide-gray-200\\\">\\n        {activities.map(activity => (\\n          <li key={activity.id} className=\\\"flex items-center justify-between p-3\\\">\\n            <div>\\n              <p className='font-semibold text-gray-700'>{activity.user} <span className='font-normal text-gray-500'>{activity.action}</span></p>\\n             <p className='text-gray-500 text-sm'>{isToday(activity.date) ? 'Today, ' + format(activity.date, 'HH:mm') : format(activity.date, 'MMM dd, HH:mm')}</p>\\n            </div>\\n          </li>\\n        ))}\\n      </ul>\\n    </div>\\n  );\\n}\\n\\nexport default RecentActivity;\"\n    }\n  },\n   \"generatedFiles\": [\n    \"/App.js\",\n    \"/components/Sidebar/Sidebar.js\",\n    \"/components/Header/Header.js\",\n    \"/components/Dashboard/Dashboard.js\",\n    \"/components/Dashboard/Summary/Summary.js\",\n     \"/components/Dashboard/TaskList/TaskList.js\",\n      \"/components/Dashboard/ChartSection/ChartSection.js\",\n      \"/components/Dashboard/RecentActivity/RecentActivity.js\"\n  ]\n}\n```\n"},
          ],
        },
      ],
    })
  
   
  
  
 